# Single Color RGB565 Blob Tracking Example
import sensor, image, time
from pyb import UART
uart = UART(3,9600, timeout_char = 1000)


thresholds = [(17, 27, -31, -18, 3, 22), #Threshold for blue. These are the Min and Max values of L, A,
# and B colour space.
              (38, 40, -5, 2, 40, 46)] #Threshold for yellow
sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.skip_frames(time = 2000)
sensor.set_auto_gain(False) # must be turned off for color tracking
sensor.set_auto_whitebal(False) # must be turned off for color tracking
clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    for blob in img.find_blobs([thresholds[0]], pixe ls_threshold=200, area_threshold=200, merge=True):
        img.draw_rectangle(blob.rect()) #draw a rectangle around the blue object
        img.draw_cross(blob.cx(), blob.cy()) # add a cross in the centre of the object
        uart.write("%d\n"%blob.cy())
        uart.write("%d\n"%blob.cx())
        print("Blue x: " "%d"%blob.cx(), "y: ""%d\n"%blob.cy()) #print the x and y values of the object


    clock.tick()
    img = sensor.snapshot()
    for blob in img.find_blobs([thresholds[1]], pixels_threshold=200, area_threshold=200, merge=True):
        img.draw_rectangle(blob.rect()) #draw a rectangle around the blue object
        img.draw_cross(blob.cx(), blob.cy()) # add a cross in the centre of the object
        uart.write("%d\n"%blob.cy())
        uart.write("%d\n"%blob.cx())
        print("Yellow x: " "%d"%blob.cx(), "y: ""%d\n"%blob.cy())  #print the x and y values of the object

